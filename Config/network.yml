AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AppName:
    Type: String
    Description: Used to name resources.
  Environment:
    Type: String
    Description: Environment name for cost allocation.
    Default: Development
  IngressCIDR:
    Type: String
    Description: The CIDR range allowed to access the application.
    Default: 0.0.0.0/0
  ProjectName:
    Type: String
    Description: Project name for cost allocation.
    Default: SecureNoteManager

Resources:
  # NETWORKS
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub '${AppName}-vpc'

  InternetGateWay:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub '${AppName}-igw'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateWay

  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC

  Route:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateWay
  
  ECSClusterSubnetARouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref ECSClusterSubnetA

  ECSClusterSubnetBRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref ECSClusterSubnetB

  DatabaseRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref DatabaseSubnet

  ReverseProxyRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref ReverseProxySubnet

  ECSClusterSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ECSClusterSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1b
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  DatabaseSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ReverseProxySubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.4.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # NETWORK LOAD BALANCERS
  UIServiceNetworkLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Sub '${ProjectName}-ui-nlb'
      Scheme: internal
      Subnets:
        - !Ref ECSClusterSubnetA
        - !Ref ECSClusterSubnetB
      SecurityGroups:
        - !Ref UISecurityGroup
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  
  APIServiceNetworkLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Sub '${ProjectName}-api-nlb'
      Scheme: internal
      Subnets:
        - !Ref ECSClusterSubnetA
        - !Ref ECSClusterSubnetB
      SecurityGroups:
        - !Ref APISecurityGroup
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # SECURITY GROUPS
  DatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the database database
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !GetAtt APISecurityGroup.GroupId
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ReverseProxySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the Nginx reverse proxy
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref IngressCIDR
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref IngressCIDR
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  APISecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the API
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !GetAtt UISecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !GetAtt ReverseProxySecurityGroup.GroupId
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  UISecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the UI
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !GetAtt ReverseProxySecurityGroup.GroupId
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # ELASTIC IPS
  DatabaseElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  ReverseProxyElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  UIElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  APIElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

Outputs:
  APIElasticIP:
    Description: Elastic IP for the API ECS service
    Export:
      Name: !Sub '${AppName}-api-elastic-ip'
    Value: !Ref APIElasticIP
  APIServiceNetworkLoadBalancer:
    Description: Network load balancer for the API
    Export:
      Name: !Sub '${AppName}-api-nlb'
    Value: !Ref APIServiceNetworkLoadBalancer
  APISecurityGroup:
    Description: Security group ID for the API
    Export:
      Name: !Sub '${AppName}-api-security-group-id'
    Value: !GetAtt APISecurityGroup.GroupId
  DatabaseElasticIP:
    Description: Elastic IP for the database EC2 instance
    Export:
      Name: !Sub '${AppName}-database-elastic-ip'
    Value: !Ref DatabaseElasticIP
  DatabaseSecurityGroup:
    Description: Security group ID for the database
    Export:
      Name: !Sub '${AppName}-database-security-group-id'
    Value: !GetAtt DatabaseSecurityGroup.GroupId
  DatabaseSubnet:
    Description: Subnet ID for the database EC2 instance
    Export:
      Name: !Sub '${AppName}-database-subnet-id'
    Value: !GetAtt DatabaseSubnet.SubnetId
  ECSClusterSubnetA:
    Description: Subnet ID for the ECS cluster
    Export:
      Name: !Sub '${AppName}-ecs-cluster-subneta-id'
    Value: !GetAtt ECSClusterSubnetA.SubnetId
  ECSClusterSubnetB:
    Description: Subnet ID for the ECS cluster
    Export:
      Name: !Sub '${AppName}-ecs-cluster-subnetb-id'
    Value: !GetAtt ECSClusterSubnetB.SubnetId
  ReverseProxyElasticIP:
    Description: Elastic IP for the Nginx EC2 instance
    Export:
      Name: !Sub '${AppName}-reverse-proxy-elastic-ip'
    Value: !Ref ReverseProxyElasticIP
  ReverseProxySecurityGroup:
    Description: Security group ID for the Nginx reverse proxy
    Export:
      Name: !Sub '${AppName}-reverse-proxy-security-group-id'
    Value: !GetAtt ReverseProxySecurityGroup.GroupId
  ReverseProxySubnet:
    Description: Subnet ID for the Nginx EC2 instance
    Export:
      Name: !Sub '${AppName}-reverse-proxy-subnet-id'
    Value: !GetAtt ReverseProxySubnet.SubnetId
  UISecurityGroup:
    Description: Security group ID for the UI
    Export:
      Name: !Sub '${AppName}-ui-security-group-id'
    Value: !GetAtt UISecurityGroup.GroupId
  UIServiceNetworkLoadBalancer:
    Description: Network load balancer for the UI
    Export:
      Name: !Sub '${AppName}-ui-nlb'
    Value: !Ref UIServiceNetworkLoadBalancer
  UIElasticIP:
    Description: Elastic IP for the UI ECS service
    Export:
      Name: !Sub '${AppName}-ui-elastic-ip'
    Value: !Ref UIElasticIP
  VPCId:
    Description: VPC ID
    Export:
      Name: !Sub '${AppName}-vpc-id'
    Value: !GetAtt MyVPC.VpcId
