AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AppName:
    Type: String
    Description: Used to name resources.
  ProjectName:
    Type: String
    Description: Project name for cost allocation.
    Default: SecureNoteManager
  Environment:
    Type: String
    Description: Environment name for cost allocation.
    Default: Dev
  IngressCIDR:
    Type: String
    Description: The CIDR range allowed to access the application.
    Default: 0.0.0.0/0

Resources:
  # NETWORKS
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub '${AppName}-vpc'

  ECSClusterSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ECSClusterSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1b
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  PostgresSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ReverseProxySubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.4.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # NETWORK LOAD BALANCERS
  UIServiceNetworkLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Sub '${ProjectName}-ui-nlb'
      Scheme: internal
      Subnets:
        - !Ref ECSClusterSubnetA
        - !Ref ECSClusterSubnetB
      SecurityGroups:
        - !Ref UISecurityGroup
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  
  APIServiceNetworkLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Sub '${ProjectName}-api-nlb'
      Scheme: internal
      Subnets:
        - !Ref ECSClusterSubnetA
        - !Ref ECSClusterSubnetB
      SecurityGroups:
        - !Ref APISecurityGroup
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # SECURITY GROUPS
  DatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the PostgreSQL database
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !GetAtt APISecurityGroup.GroupId
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ReverseProxySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the Nginx reverse proxy
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref IngressCIDR
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref IngressCIDR
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  APISecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the API
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !GetAtt UISecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !GetAtt ReverseProxySecurityGroup.GroupId
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  UISecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Security group for the UI
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !GetAtt ReverseProxySecurityGroup.GroupId
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # ELASTIC IPS
  PostgresElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  NginxElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  UIElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  APIElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

Outputs:
  VPCId:
    Description: VPC ID
    Value: !GetAtt MyVPC.VpcId
    Export:
      Name: !Sub '${AppName}-vpc-id'
  ECSClusterSubnetA:
    Description: Subnet ID for the ECS cluster
    Value: !GetAtt ECSClusterSubnetA.SubnetId
    Export:
      Name: !Sub '${AppName}-ecs-cluster-subneta-id'
  ECSClusterSubnetB:
    Description: Subnet ID for the ECS cluster
    Value: !GetAtt ECSClusterSubnetB.SubnetId
    Export:
      Name: !Sub '${AppName}-ecs-cluster-subnetb-id'
  PostgresSubnet:
    Description: Subnet ID for the Postgres EC2 instance
    Value: !GetAtt PostgresSubnet.SubnetId
    Export:
      Name: !Sub '${AppName}-postgres-subnet-id'
  ReverseProxySubnet:
    Description: Subnet ID for the Nginx EC2 instance
    Value: !GetAtt ReverseProxySubnet.SubnetId
    Export:
      Name: !Sub '${AppName}-reverse-proxy-subnet-id'
  PostgresElasticIP:
    Description: Elastic IP for the Postgres EC2 instance
    Value: !Ref PostgresElasticIP
    Export:
      Name: !Sub '${AppName}-postgres-elastic-ip'
  NginxElasticIP:
    Description: Elastic IP for the Nginx EC2 instance
    Value: !Ref NginxElasticIP
    Export:
      Name: !Sub '${AppName}-nginx-elastic-ip'
  UIElasticIP:
    Description: Elastic IP for the UI ECS service
    Value: !Ref UIElasticIP
    Export:
      Name: !Sub '${AppName}-ui-elastic-ip'
  APIElasticIP:
    Description: Elastic IP for the API ECS service
    Value: !Ref APIElasticIP
    Export:
      Name: !Sub '${AppName}-api-elastic-ip'
  UIServiceNetworkLoadBalancer:
    Description: Network load balancer for the UI
    Value: !Ref UIServiceNetworkLoadBalancer
    Export:
      Name: !Sub '${AppName}-ui-nlb'
  APIServiceNetworkLoadBalancer:
    Description: Network load balancer for the API
    Value: !Ref APIServiceNetworkLoadBalancer
    Export:
      Name: !Sub '${AppName}-api-nlb'
  DatabaseSecurityGroup:
    Description: Security group ID for the PostgreSQL database
    Value: !GetAtt DatabaseSecurityGroup.GroupId
    Export:
      Name: !Sub '${AppName}-database-security-group-id'
  ReverseProxySecurityGroup:
    Description: Security group ID for the Nginx reverse proxy
    Value: !GetAtt ReverseProxySecurityGroup.GroupId
    Export:
      Name: !Sub '${AppName}-reverse-proxy-security-group-id'
  APISecurityGroup:
    Description: Security group ID for the API
    Value: !GetAtt APISecurityGroup.GroupId
    Export:
      Name: !Sub '${AppName}-api-security-group-id'
  UISecurityGroup:
    Description: Security group ID for the UI
    Value: !GetAtt UISecurityGroup.GroupId
    Export:
      Name: !Sub '${AppName}-ui-security-group-id'