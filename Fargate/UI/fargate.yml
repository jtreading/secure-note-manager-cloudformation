AWSTemplateFormatVersion: 2010-09-09
Parameters:
  IngressCIDR:
    Type: String
    Description: The CIDR range allowed to access the cluster. Replace with reverse proxy server IP range.
    Default: 0.0.0.0/0
  AccountId:
    Type: String
    Description: Amazon account ID, used for locating default execution roles.
    Default: aws_account_id
  AppName:
    Type: String
    Description: Used to name the ECS cluster.
    Default: CFNCluster
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC where the ECS cluster will be deployed.
  SubnetCIDR:
    Type: String
    Description: CIDR block for the subnet where the ECS cluster will be deployed.
    Default: 172.31.96.0/24
  ImageLocation:
    Type: String
    Description: The location of the Docker image to use in ECS.
    Default: 123456789012.dkr.ecr.region.amazonaws.com/image:tag
  APIURL:
    Type: String
    Description: The URL of the api to use in the application.
    Default: http://api.ip.address:5000

Resources:
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Sub '${AppName}-cluster'

  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/${AppName}-log-group'

  ECSTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Command:
            - "/bin/sh"
            - "./start.sh"
          Essential: true
          Environment:
            - Name: REACT_APP_API_URL
              Value: !Ref APIURL
          Image: !Ref ImageLocation
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs
          Name: !Sub '${AppName}-task'
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
      Cpu: 1024
      ExecutionRoleArn: !Sub 'arn:aws:iam::${AccountId}:role/ecsTaskExecutionRole'
      Family: task-definition-cfn
      Memory: 2048
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX

  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Sub '${AppName}-service'
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !GetAtt ClusterSecurityGroup.GroupId
          Subnets:
            - !Ref ClusterSubnet
      TaskDefinition: !Ref ECSTaskDefinition

  ClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for the cluster
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: !Ref IngressCIDR

  ClusterSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCId
      CidrBlock: !Ref SubnetCIDR
      AvailabilityZone: us-east-1a
