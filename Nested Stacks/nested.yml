AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AppName: 
    Type: String
    Description: Used to name resources.
    Default: secure-note-manager
  KeyPairName:
    Type: String
    Description: The name of the EC2 key pair to associate with resources.
    Default: SNMKeypair
  ExternalCIDR:
    Type: String
    Description: The CIDR range for inbound access.
    Default: 0.0.0.0/0
  ProjectName:
    Type: String
    Description: Project name for cost allocation.
    Default: SecureNoteManager
  Environment:
    Type: String
    Description: Environment name for cost allocation.
    Default: Development

Resources:
  # CONFIG
  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        IngressCIDR: !Ref ExternalCIDR
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
      Outputs:
        - OutputKey: DatabaseSecurityGroup
        - OutputKey: ReverseProxySecurityGroup
        - OutputKey: APISecurityGroup
        - OutputKey: UISecurityGroup
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ServiceRolesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
      Outputs:
        - OutputKey: CodeBuildServiceRole
        - OutputKey: ECSTaskExecutionRole
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
        UISecurityGroup: !ImportValue Fn::Sub: "${SecurityGroupStack}-UISecurityGroupId"
      Outputs:
        - OutputKey: VPCId
        - OutputKey: ECSClusterSubnet
        - OutputKey: PostgresElasticIP
        - OutputKey: NginxElasticIP
        - OutputKey: UIElasicIP
        - OutputKey: APIElasticIP
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # SERVERS
  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        KeypairName: !Ref KeyPairName
        AMI: ami-058bd2d568351da34
        SecurityGroup: !ImportValue Fn::Sub: "${SecurityGroupStack}-DatabaseSecurityGroup"
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
      Outputs:
        - OutputKey: DatabasePublicIP
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  ReverseProxyStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        IngressCIDR: !Ref ExternalCIDR
        UIElasticIP: !ImportValue Fn::Sub: "${NetworkStack}-UIElasticIP"
        APIElasticIP: !ImportValue Fn::Sub: "${NetworkStack}-APIElasticIP"
        KeypairName: !Ref KeyPairName
        AMI: ami-058bd2d568351da34
        SecurityGroup: !ImportValue Fn::Sub: "${SecurityGroupStack}-ReverseProxySecurityGroup"
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
      Outputs:
        - OutputKey: ReverseProxyInstancePublicIP
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

# CONTAINERS
  FargateStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        IngressCIDR: !ImportValue !Sub "${ReverseProxyStack}-ReverseProxyInstancePublicIP/32"
        VPCId: !ImportValue Fn::Sub: "${NetworkStack}-VPCId"
        SubnetCIDR: !ImportValue Fn::Sub: "${NetworkStack}-ECSClusterCIDR"
        ClusterSecurityGroup: !ImportValue Fn::Sub: "${SecurityGroupStack}-ClusterSecurityGroupId"
        ClusterSubnet: !ImportValue Fn::Sub: "${SecurityGroupStack}-ClusterSubnetId"
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
      Outputs:
        - OutputKey: ECSClusterArn
      Tags:
        - Key: <TagKey>
          Value: <TagValue>

# PIPELINE
  APIPipelineStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        GitHubRepo: <ParameterValue>
        AWSRegion: <ParameterValue>
        AWSAccountId: <ParameterValue>
        AppName: SecureNotesManager
        DockerHubUsername: <ParameterValue>
        DockerHubPassword: <ParameterValue>
        CodeBuildServiceRole: !ImportValue Fn::Sub: "${ServiceRolesStack}-CodeBuildServiceRoleArn"
        ECRRepository: !ImportValue Fn::Sub: "${APIFargateStack}-ECRRepositoryURL"
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
      Tags:
        - Key: <TagKey>
          Value: <TagValue>

  UIPipelineStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: <URL of the nested stack template>
      Parameters:
        GitHubRepo: <ParameterValue>
        AWSRegion: <ParameterValue>
        AWSAccountId: <ParameterValue>
        AppName: SecureNotesManager
        DockerHubUsername: <ParameterValue>
        DockerHubPassword: <ParameterValue>
        CodeBuildServiceRole: !ImportValue Fn::Sub: "${ServiceRolesStack}-CodeBuildServiceRoleArn"
        ECRRepository: !ImportValue Fn::Sub: "${APIFargateStack}-ECRRepositoryURL"
        ProjectName: !Ref ProjectName
        Environment: !Ref Environment
      Tags:
        - Key: <TagKey>
          Value: <TagValue>